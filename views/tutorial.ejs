<%- include("./partials/head") %>
<h3>Learn <%= database %></h3>
<div id="introduction">
</div>
<div id="content"></div>
<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.2.0/highlight.min.js"
  integrity="sha512-TDKKr+IvoqZnPzc3l35hdjpHD0m+b2EC2SrLEgKDRWpxf2rFCxemkgvJ5kfU48ip+Y+m2XVKyOCD85ybtlZDmw=="
  crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.2.0/styles/tomorrow.min.css"
  integrity="sha512-r3qr7vMdHYmWUzqC7l4H/W03ikAyiFIQld+B71yAmHhu7wcsnvm/adhikM+FzDxxK9ewznhCVnAm+yYZpPBnSg=="
  crossorigin="anonymous" />
<script>
  const dbHost = "<%= dbHost %>"
  const username = "<%= username %>"
  const dbPassword = "<%= dbPassword %>"
  const dbExists = <%= dbExists %>
  const database = "<%= database %>"

  const credentials = document.createElement("pre")
  const renderCredentials = (username, dbPassword) => {
    if (database === "Postgres") {
      credentials.innerHTML = `<code>host: ${dbHost}
username: ${username}
password: ${dbPassword}
database: ${username}</code>`
    } else if (database === "Elasticsearch") {
      credentials.innerHTML = `<code>host: ${dbHost}
username: ${username}
password: ${dbPassword}
index: ${username}-*</code>`
    } else {
      credentials.innerHTML = ""
    }
    introduction.append(credentials)
  }

  const content = document.getElementById("content")
  const renderContent = (username, dbPassword) => {
    fetch(`/lessons/${database}.md`).then(r => r.text()).then((r) => {
      marked.setOptions({
        highlight: function (code) {
          return hljs.highlightAuto(code).value
        }
      })
      const markedHTML = marked(r)
      const markedHTMLwithUserData = markedHTML.replace(/@username/gi, username).replace(/@dbPassword/gi, dbPassword)
      content.innerHTML = markedHTMLwithUserData
    })
  }
  
  let disabled
  const createDb = () => {
    if (disabled) return
    disabled = true
    createDb_button.classList.add("disabled")
    createDb_button.innerText = "Creating..."
    fetch(`/api/createDatabase/${database}`, { method: "POST" }).then(r => r.json()).then((r) => {
      if (r.error) {
        alert(r.error.message)
        disabled = false
        createDb_button.classList.remove("disabled")
        createDb_button.innerText = "Create my database"
      } else {
        if (r.email) {
          alert("Your database is successfully created!")
        } else {
          alert("Your temporary database is successfully created!\r\nSince credentials are provided only once, please keep the information somewhere safe.")
        }
        createDb_button.style.opacity = 0
        setTimeout(() => {
          createDb_button.innerText = "Complete!"
          createDb_button.style.background = "rgb(10, 170, 75)"
          createDb_button.style.opacity = 1
          setTimeout(() => {
            renderCredentials(r.username, r.dbPassword)
            renderContent(r.username, r.dbPassword)
          }, 200)
        }, 200)
      }
    })
  }

  const createDb_button = document.createElement("button")
  createDb_button.id = "createDb"
  createDb_button.innerText = "Create my database"
  createDb_button.addEventListener("click", createDb)
  
  const introduction = document.getElementById("introduction")
  if (!username) {
    introduction.innerHTML = `
      <p>In this module, you can learn how to use ${database}. Don't have ${database} installed on your local machine yet? Fear not! We can make a ${database} database for you. Simply click on the button below to create your temporary ${database} database. Credentials for your database will appear after it is done being created.</p>
      <p>Temporary database credentials will expire in 5 days. If you want, you can sign up with us and get a non-expiring Postgres database!</p>
    `
    introduction.append(createDb_button)
    renderContent("username", "dbPassword")
  } else if (!dbExists) {
    introduction.innerHTML = `
      <p>In this module, you can learn how to use ${database}. Don't have ${database} installed on your local machine yet? Fear not! We can make an ${database} database for you. Simply click on the button below to create your ${database} database. Credentials for your database will appear after it is done being created.</p>
    `
    introduction.append(createDb_button)
    renderContent("username", "dbPassword")
  } else {
    introduction.innerHTML = `
<p>In this module, you can learn how to use ${database}. You have already created an ${database} database on our server. Here are the credentials for your database.</p>
    `
    renderCredentials(username, dbPassword)
    renderContent(username, dbPassword)
  }

</script>

<style>
  #createDb {
    display: block;
    margin: auto;
    margin-top: 26px;
    margin-bottom: 26px;
    transition: 0.2s;
  }

  #createDb.disabled {
    cursor: default;
  }
</style>
