// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test welcome page should render postgres page correctly 1`] = `
"<!DOCTYPE html>
<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<html lang=\\"en\\">
  </head>
  <body>
    <h2>Learn and try out different databases!</h2>
    <p>Instructions on how to install and setup your own databases are included in the tutorial.</p>

      <blockquote id=\\"postgres\\" class=\\"db-card\\">
        <h4 class=\\"db-title\\">PostgreSQL</h4>
        <p class=\\"db-discription\\">A relational database management system emphasizing extensibility and technical standards compliance.</p>
      </blockquote>
      <blockquote id=\\"elastic\\" class=\\"db-card\\">
        <h4 class=\\"db-title\\">Elasticsearch</h4>
        <p class=\\"db-discription\\">A highly scalable full-text search analytics engine. It allows you to store, search and analyze big volumes of data quickly and in near real time.</p>
      </blockquote>
      <blockquote id=\\"mongodb\\" class=\\"db-card darkenCards\\">
        <h4 class=\\"db-title\\">MongoDB (coming next sprint!)</h4>
        <p class=\\"db-discription\\">An open source database management system using a document-oriented database model that supports various forms of data.<p>
			</blockquote>
      <blockquote id=\\"neo4j\\" class=\\"db-card darkenCards\\">
        <h4 class=\\"db-title\\">Neo4j (coming next sprint!)</h4>
        <p class=\\"db-discription\\">A graph database management system that is the most popular graph database and the 22nd most popular database overall.</p>
      </blockquote>

    <p style=\\"text-align:center;\\">Everything we do here is open source. Checkout our github
    <a href=\\"https://github.com/garageScript/databases\\">Here</a></p>
    <hr>
    <h3>Sponsors</h3>
    <ul>
      <li>
        <p><a href=\\"https://c0d3.com\\">C0d3</a> (They taught us to code)</p>
      </li>
    </ul>

    <p>Want to add a new Database or Sponsor? 
			<a href=\\"https://github.com/garageScript/databases/issues\\">Contact Us</a>
		</p>

		<p>We collect anonymous analytics using 
			<a href=\\"https://umami.is/\\">Umami</a>. 
			View live: 
			<a href=\\"https://analytics.learndatabases.dev/share/9DRDvLQJ/LearnDatabases\\">
				analytics.learndatabases.dev
			</a>
		</p>

  </body>

  <style>
    .db-card {
      cursor: pointer;
    }
		.darkenCards {
			opacity: 60%;
		}
    .db-card:hover {
      border-left: solid 5px rgb(10, 70, 120);
    }
  </style>
  <script>
    document.getElementById('postgres').addEventListener('click', () => {
      location.href = '/postgres'
    })
    document.getElementById('elastic').addEventListener('click', () => {
      location.href = '/elasticsearch'
		})
		/*
    document.getElementById('mongodb').addEventListener('click', () => {
      location.href = '/mongodb'
    })
    document.getElementById('neo4j').addEventListener('click', () => {
      location.href = '/neo4j'
		})
		*/
  </script>

  <script async defer data-website-id=\\"d367293a-0e30-4ae1-bdce-3651e1b64909\\" src=\\"https://analytics.learndatabases.dev/umami.js\\"></script>

</html>
"
`;

exports[`test welcome page should render resetPassword page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<main>
  <div class=\\"card\\">
    <div class=\\"body\\">
      <h3 class=\\"subtitle\\">Reset your password</h3>
      <input class=\\"email\\" placeholder=\\"Email\\" /><br />
      <button class=\\"submit\\">Submit</button>
    </div>
    <div class=\\"tale\\">
      <div>Wanna go back? <a href=\\"/signin\\">Log In</a></div>
    </div>
  </div>
</main>

<script>
  const submit = document.querySelector(\\".submit\\");
  const email = document.querySelector(\\".email\\");

  submit.addEventListener(\\"click\\", () => {
    fetch(\\"/api/notifications\\", {
      method: \\"POST\\",
      headers: {
        \\"content-type\\": \\"application/json\\",
      },
      body: JSON.stringify({
        email: email.value,
      }),
    })
      .then((r) => r.json())
      .then((r) => {
        if (r.error) {
          alert(r.error.message);
        } else {
          alert(
            \\"Check your email (don't forget to check the spam box!) and set your password\\"
          );
          return (location.href = \\"/signin\\");
        }
      });
  });
</script>
"
`;

exports[`test welcome page should render setDBpassword page correctly 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">
<head>
<meta charset=\\"utf-8\\">
<title>Error</title>
</head>
<body>
<pre>Cannot GET /setDBpassword</pre>
</body>
</html>
"
`;

exports[`test welcome page should render setPassword page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<main>
    <div class=\\"card\\">
        <div class=\\"body\\">
            <h3 class=\\"subtitle\\">Set your password</h3>
            <input class=\\"password1\\" placeholder=\\"create new password\\" type=\\"password\\"/><br>
            <input class=\\"password2\\" placeholder=\\"confirm password\\" type=\\"password\\"/>
            <button class=\\"submit\\">Submit</button>
        </div>
    </div>
</main>

<script>
    const path = window.location.pathname.split('/')
    const token = path.pop()
    const password1 = document.querySelector('.password1')
    const password2 = document.querySelector('.password2')
    const submit = document.querySelector('.submit')

    submit.addEventListener('click', () => {
        if (password1.value !== password2.value) {
            return alert(\\"Passwords do not match. Please check again.\\")
        }
        fetch('/api/passwordReset', {
            method: \\"POST\\",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                token: token,
                password: password1.value
            })
        }).then(r => r.json()).then((r) => {
            if (r.error) return alert(r.error.message)
            if (r.dbPassword) return location.href = '/'
            return location.href = '/setDBPassword'
        }).catch((err) => {
            alert(\\"Setting password has failed. Please try again.\\", err)
        })
    })
</script>

"
`;

exports[`test welcome page should render sign in page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<main>
    <div class=\\"card\\">
        <div class=\\"body\\">
            <h3 class=\\"subtitle\\">Please log in</h3>
            <input class=\\"email\\" placeholder=\\"Email\\" /><br>
            <input class=\\"password\\" placeholder=\\"Password\\" type=\\"password\\"/>
            <button class=\\"submit\\">Submit</button>
        </div>
        <div class=\\"tale\\">
            <div>Forgot password? <a href=\\"/resetPassword\\">Reset Password</a></div>
            <div>Don't have account? <a href=\\"/signup\\">Sign Up</a></div>
        </div>
    </div>
</main>

<script>
    const email = document.querySelector('.email')
    const password = document.querySelector('.password')
    const submit = document.querySelector('.submit')

    submit.addEventListener('click', () => {
        fetch('/api/session', {
            method: \\"POST\\",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: email.value.toLowerCase(),
                password: password.value
            })
        }).then(r => r.json()).then((r) => {
            if (r.error) return alert(r.error.message)
            return location.href = '/'
        })
    })
</script>

"
`;

exports[`test welcome page should render sign up page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<div class=\\"card\\">
  <div class=\\"body\\">
    <h3 class=\\"subtitle\\">Create Account</h3>
    <input class=\\"email\\" type=\\"email\\" placeholder=\\"Email Address\\" required />
    <button class=\\"submit\\">Create Account</button>
  </div>
  <div class=\\"tale\\">Already have an account? <a href=\\"/signin\\">Login</a></div>

  <script>
    const submit = document.querySelector(\\".submit\\");
    const check = document.querySelector(\\".check\\");
    const email = document.querySelector(\\".email\\");

    submit.addEventListener(\\"click\\", () => {
      fetch(\\"/api/users\\", {
        method: \\"POST\\",
        headers: {
          \\"Content-Type\\": \\"application/json\\",
        },
        body: JSON.stringify({
          email: email.value.toLowerCase(),
        }),
      })
        .then((r) => r.json())
        .then((res) => {
          if (res.error) {
            const message = res.error.message;
            alert(message);
          } else {
            alert(
              \\"Check your email (don't forget to check the spam box!) and set your password\\"
            );
            return (location.href = \\"/signin\\");
          }
        });
    });
  </script>
</div>
"
`;

exports[`test welcome page should render welcome page correctly 1`] = `
"<!DOCTYPE html>
<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<html lang=\\"en\\">
  </head>
  <body>
    <h2>Learn and try out different databases!</h2>
    <p>Instructions on how to install and setup your own databases are included in the tutorial.</p>

      <blockquote id=\\"postgres\\" class=\\"db-card\\">
        <h4 class=\\"db-title\\">PostgreSQL</h4>
        <p class=\\"db-discription\\">A relational database management system emphasizing extensibility and technical standards compliance.</p>
      </blockquote>
      <blockquote id=\\"elastic\\" class=\\"db-card\\">
        <h4 class=\\"db-title\\">Elasticsearch</h4>
        <p class=\\"db-discription\\">A highly scalable full-text search analytics engine. It allows you to store, search and analyze big volumes of data quickly and in near real time.</p>
      </blockquote>
      <blockquote id=\\"mongodb\\" class=\\"db-card darkenCards\\">
        <h4 class=\\"db-title\\">MongoDB (coming next sprint!)</h4>
        <p class=\\"db-discription\\">An open source database management system using a document-oriented database model that supports various forms of data.<p>
			</blockquote>
      <blockquote id=\\"neo4j\\" class=\\"db-card darkenCards\\">
        <h4 class=\\"db-title\\">Neo4j (coming next sprint!)</h4>
        <p class=\\"db-discription\\">A graph database management system that is the most popular graph database and the 22nd most popular database overall.</p>
      </blockquote>

    <p style=\\"text-align:center;\\">Everything we do here is open source. Checkout our github
    <a href=\\"https://github.com/garageScript/databases\\">Here</a></p>
    <hr>
    <h3>Sponsors</h3>
    <ul>
      <li>
        <p><a href=\\"https://c0d3.com\\">C0d3</a> (They taught us to code)</p>
      </li>
    </ul>

    <p>Want to add a new Database or Sponsor? 
			<a href=\\"https://github.com/garageScript/databases/issues\\">Contact Us</a>
		</p>

		<p>We collect anonymous analytics using 
			<a href=\\"https://umami.is/\\">Umami</a>. 
			View live: 
			<a href=\\"https://analytics.learndatabases.dev/share/9DRDvLQJ/LearnDatabases\\">
				analytics.learndatabases.dev
			</a>
		</p>

  </body>

  <style>
    .db-card {
      cursor: pointer;
    }
		.darkenCards {
			opacity: 60%;
		}
    .db-card:hover {
      border-left: solid 5px rgb(10, 70, 120);
    }
  </style>
  <script>
    document.getElementById('postgres').addEventListener('click', () => {
      location.href = '/postgres'
    })
    document.getElementById('elastic').addEventListener('click', () => {
      location.href = '/elasticsearch'
		})
		/*
    document.getElementById('mongodb').addEventListener('click', () => {
      location.href = '/mongodb'
    })
    document.getElementById('neo4j').addEventListener('click', () => {
      location.href = '/neo4j'
		})
		*/
  </script>

  <script async defer data-website-id=\\"d367293a-0e30-4ae1-bdce-3651e1b64909\\" src=\\"https://analytics.learndatabases.dev/umami.js\\"></script>

</html>
"
`;
